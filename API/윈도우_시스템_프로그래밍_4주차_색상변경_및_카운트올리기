#include <windows.h>
#include "resource.h"
#include <stdio.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, 
			WPARAM wParam, LPARAM lParam);

COLORREF TextColor;

LPCTSTR lpszClass = TEXT("New Title Hong Gil Dong");

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, //WINAPI : 윈ⓒ도伊?우칒 프A로짪그쐴?램ㄱ?이I라?는쩇 의C미?
		   LPSTR lpszCmdLine, int nCmdShow)						 //hInstance : 운칒영??체¼제|의C 커¿널?이I 응A용칎 프A로짪그쐴?램ㄱ?에??부촇여??한N ID
{																 //szCmdLine : 커¿멘촡트、?라?인I 상?에??서品?프A로짪그쐴?램ㄱ?구쐼?동醫?시? 전u달ⅷ?된? 문取?자U열??
	HWND	hwnd;												 //iCmdShow : 윈ⓒ도伊?우칒가튀?화­면촦에??출a력짞될? 형u태A
	MSG		msg;
	WNDCLASS WndClass;											 //WndClass 라?는쩇 구쐼?조¶체¼ 정¤의C									 
	WndClass.style			= CS_HREDRAW | CS_VREDRAW;			 //출a력짞스翠?타¸일I : 수?직÷/수?평죓의C 변?화­시? 다쩤시? 그쐴?림З?
	WndClass.lpfnWndProc	= WndProc;							 //프A로짪시?저u 함O수?명촫
	WndClass.cbClsExtra		= 0;								 //O/S 사?용칎 여??분Ж?메Ж?모З?리Б?(Class)
	WndClass.cbWndExtra		= 0;								 //O/s 사?용칎 여??분Ж?메Ж?모З?리Б?(Window)
	WndClass.hInstance		= hInstance;						 //응A용칎 프A로짪그쐴?램ㄱ?ID
	WndClass.hIcon			= LoadIcon(NULL, IDI_APPLICATION);	 //아奚?이I콘U 유?형u
	WndClass.hCursor		= LoadCursor(NULL, IDC_ARROW);		 //커¿서品?유?형u
	WndClass.hbrBackground	= (HBRUSH)GetStockObject(WHITE_BRUSH);//배?경튜?색?   
	WndClass.lpszMenuName	= NULL;								 //메Ж?뉴ⅷ?이I름А?
	WndClass.lpszClassName	= lpszClass;						 //클￢래ㄲ?스翠?이I름А?
	RegisterClass(&WndClass);									 //앞?서品?정¤의C한N 윈ⓒ도伊?우칒 클￢래ㄲ?스翠?의C 주O소?

	hwnd = CreateWindow(lpszClass,								 //윈ⓒ도伊?우칒가튀?생?성彼?되?면촦 핸U들?(hwnd)이I 반?환?
		lpszClass,												 //윈ⓒ도伊?우칒 클￢래ㄲ?스翠? 타¸이I틀­?이I름А?
		WS_OVERLAPPEDWINDOW,									 //윈ⓒ도伊?우칒 스翠?타¸일I
		100,											 //윈ⓒ도伊?우칒 위§치¡, x좌A표￥
		50,											 //윈ⓒ도伊?우칒 위§치¡, y좌A표￥
		600,											 //윈ⓒ도伊?우칒 폭­?  
		400,											 //윈ⓒ도伊?우칒 높?이I   
		NULL,													 //부촇모З?윈ⓒ도伊?우칒 핸U들?	 
		LoadMenu(hInstance, MAKEINTRESOURCE(IDR_MENU1)),													 //메Ж?뉴ⅷ?핸U들?
		hInstance,    											 //응A용칎 프A로짪그쐴?램ㄱ?ID
		NULL     												 //생?성彼?된? 윈ⓒ도伊?우칒 정¤보Б?
	);
	ShowWindow(hwnd, nCmdShow);									 //윈ⓒ도伊?우칒의C 화­면촦 출a력짞
	UpdateWindow(hwnd);											 //O/S 에??WM_PAINT 메Ж?시?지o 전u송?

	while(GetMessage(&msg, NULL, 0, 0))							 //WinProc()에??서品?PostQuitMessage() 호￡출a 때納?까푝지o 처³리Б?
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);									 //WinMain -> WinProc  
	}
	return (int)msg.wParam;
}

HDC hdc;

static int x, y, mx, my, Rx, Ry;
int dx=20 ,dy=20;
void CALLBACK TimerProc1(HWND hwnd, UINT iMsg, UINT ievent, DWORD dwTime)
{
		//if(ievent  == 1)
		//x += dx;
		//else
		//	y += dy;

	//x += dx;

	//y += dy;

	    //if( x < 0 || x > 550)
		//{
		//	dx = -dx;
		//}

		//if( y < 0 || y > 300)
		//{
		//	dy = -dy;
		//}
		x = rand()%550;
		y = rand()%300;
		InvalidateRect(hwnd, NULL, TRUE);
}

//void CALLBACK TimerProc2(HWND hwnd, UINT iMsg, UINT ievent, DWORD dwTime)
//{
//		//if(ievent  == 1)
//		//	x += 10;
//		//else
//		y += 10;
//		InvalidateRect(hwnd, NULL, FALSE);
//}

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam)     
{

	PAINTSTRUCT ps;

	static char linebfr[256] = {0, };
	static int oldX, oldY, left_button;
	 
	static int count;
	char score[30];

	switch (iMsg) 
	{
	case WM_CREATE:
		SetTimer(hwnd, 1, 1000, TimerProc1);
		//SetTimer(hwnd, 2, 5000, TimerProc2);
		x = 0;
		y = 0;
		count = 0;
		break;

	/* case WM_TIMER:
		if(wParam  == 1)
			x += 10;
		else
			y += 10;
		InvalidateRect(hwnd, NULL, FALSE);
		break;
	*/

	case WM_CHAR:
		InvalidateRect(hwnd, NULL, FALSE);
		break;

	
	case WM_MOUSEMOVE:
		Rx = LOWORD(lParam);
		Ry = HIWORD(lParam);
		
		//m_count++;
		//itoa(m_count, linebfr, 10);

		InvalidateRect(hwnd, NULL, TRUE);
		break;
	

	case WM_LBUTTONDOWN:

		mx = LOWORD(lParam);
		my = HIWORD(lParam);
		left_button = TRUE;

		if(mx < x+30 && mx > x-30)
			 if(my < y+30 && my > y-30)
		{
			
			count++;
			//SetTimer(hwnd, 1, 800, TimerProc1);

		}

		


		//m_count++;
		//itoa(m_count, linebfr, 10);

		InvalidateRect(hwnd, NULL, TRUE);
		break;

	case WM_RBUTTONDOWN:
		x = LOWORD(lParam);
		y = HIWORD(lParam);
		left_button = FALSE;
		//m_count--;
		//itoa(m_count, linebfr, 10);

		InvalidateRect(hwnd, NULL, TRUE);
		break;

		case WM_COMMAND:
            
      switch (LOWORD(wParam))          
      {
      
		  case ID_TIMER_START:
			SetTimer(hwnd, 1, 50, TimerProc1);
			//InvalidateRect(hwnd, NULL, TRUE); 
			break;
		
		  
		  case ID_TIMER_STOP:
			KillTimer(hwnd, 1);
			break;

	  case ID_RED:
		  TextColor = 0x000000FF;
		  InvalidateRect(hwnd, NULL, TRUE);        
		  break;
		  	  
	  case ID_GREEN:
		  TextColor = 0x0000FF00;
		  InvalidateRect(hwnd, NULL, TRUE);        
		  break;
		  	  
	  case ID_BLUE:
		  TextColor = 0x00FF0000;
		  InvalidateRect(hwnd, NULL, TRUE);        
		  break;
		  	  
	  case ID_BLACK:
		  TextColor = 0x00000000;
		  InvalidateRect(hwnd, NULL, TRUE);        
		  break;
      }            
      break;

	case WM_PAINT:
		hdc = BeginPaint(hwnd, &ps);
		SetTextColor(hdc, TextColor);
		sprintf(score, "점¡수? : %d", count);
		TextOut(hdc, 530, 0, score, strlen(score));

		//TextOut(hdc, 100, 50, "        ",8 );
		//TextOut(hdc, 100, 50, linebfr,strlen(linebfr) );
		/*if(left_button == TRUE)
			TextOut(hdc, x, y, "M", 1 );
		else
			TextOut(hdc, x, y, "  ", 2 );

		if(left_button == TRUE)
			SetPixel(hdc, x, y, RGB(255, 0, 0));
		*/
		TextOut(hdc, oldX, oldY, "   ", 3 );
		TextOut(hdc, x, y, "AS", 2 );
		Rectangle(hdc, Rx-10,Ry-10,Rx+10,Ry+10);

		oldX = x;
		oldY = y;
		
		EndPaint(hwnd, &ps);
		break;

	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	} 
	return DefWindowProc(hwnd, iMsg, wParam, lParam);			 //CASE에??서品?정¤의C되?지o 않?은º 메Ж?시?지o는쩇 커¿널?이I 처³리Б?하I도伊?록짪 메Ж?시?지o 전u달ⅷ?
}

/*
		switch(wParam)
		{
		case 'i' : // UP
			y -= 3;
			break;
		case 'j' : // LEFT
			x -= 5;
			break;
		case 'k' : // RIGHT
			x += 5;
			break;
		case 'm' : // DOWN
			y += 3;
			break;
		}
		*/
